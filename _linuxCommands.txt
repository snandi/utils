*] To change the prompt on the shell, to display the current directory, do:
   $ PS1='\h:$( pwd )\$ '
   It will only change for the current terminal, as the .bashrc and .bash_profile files are not writable.

 
#######################################################################################################
*] GIT commands
   (a) Add a connection to your friend’s version of the github repository, if you haven’t already:
       Go to ~/allez/, then type
       git remote add atbroman git://github.com/atbroman/allez
   (b) Pull his/her changes:
       git pull atbroman master
   (c) Push them back to your github repository:
       git push
   
   To start using git, use Karl Bromans introductory slides. 
   After doing git-init in an already existing folder, set up the github repository. 
   Run the following command: ssh-keygen -t rsa -C "nandi@stat.wisc.edu"
   Then add the key from the file .ssh/id_rsa.pub to the github settings (SSH keys)
   Run: git remote add origin https://github.com/snandi/RScripts_Header.git, but this step did not work on lmcg. So, 
   Run: git remote rm origin, then run
   Run: git remote add origin git@github.com:snandi/RScripts_Header.git
   Before doing git push -u origin master, run:
   eval "$(ssh-agent -s)"
   ssh-add
   git push -u origin master

   To clone an existing repository on github:
   git clone git@github.com:snandi/RScripts_Header RScripts

   To set up git on a new Project
   (1) cd Project_QualityScore
   (2) git init
   (3) cp .gitignore from somewhere
   (4) Set up a git repository on github (preferably by the same name)
   (5) git remote add origin git@github.com:snandi/Project_QualityScore.git
   (6) git add stuff
   (7) git commit -m "First commit"
   (8) git pull --rebase origin master
   (9) git push origin master

   To Collaborate
   --------------
   (a) git log: Display the entire commit history using the default formatting. If the output takes 
   up more than one screen, you can use Space to scroll and q to exit.
   (b) git log --oneline: Condense each commit to a single line. This is useful for getting a high-level 
   overview of the project history.
   (c) git log <file>: Only display commits that include the specified file. This is an easy way to 
   see the history of a particular file.
   (d) To fix a broken version of a file, do:
       1. git log file.R
       2. git diff <revision_1>:file.R <revision_2>:file.R (The revision_1 and _2 are first 6 or 7 
       	  characters of the commit ids)
   (e) 

#######################################################################################################

*] To spell check in a terminal:
   aspell -t -c LitReview.tex
   OR
   hunspell -t File.tex

*] To find the number of words in a pdf document:
   pdftotext filename.pdf - | wc -w

*] To change R/W permissions for a folder, its subfolders and all their files, do:
   chmod 700 -R folder

#######################################################################################################
## awk commands 
#######################################################################################################
*] To print first column (or any column) of a text file, using awk:
   awk '{print $1}' filename

   To print columns 1 and 4 of a text file with a space between them, using awk:
   awk '{print $1 " " $4}' filename > output

   To search for a pattern in column 1 and print the whole row for those successful searches
   awk '$1 == "pattern" {print $0}' filename

   To search for a pattern in column 1 and print some of the columns for those successful searches
   awk '$1 == "pattern" {print $1 " " $4}' filename

   To count the number of columns in each row of a text file
   cat filename | awk '{print NF}'

   To delete columns 1 and 2 of a text file
   awk '{$1=""; $2=""; sub("  ", " "); print}' input_filename > output_filename
   Explanation:
   awk: invoke the awk command
   $1=""; $2="";: set field 1 and 2 to the empty string
   sub(...);: clean up the output fields because fields 1 & 2 will still be delimited by " "
   print: print the modified line
   input_filename > output_filename: same as above.

   

#######################################################################################################
## sed commands 
#######################################################################################################
*] To delete rows from a file satisfying a particular pattern, for example "NANDI"
   sed '/NANDI/d' filename.txt

*] If you want to delete lines 5 through 10 and 12:
   sed -e '5,10d;12d' file
   This will print the results to the screen. If you want to save the results to the same file:
   
   sed -i.bak -e '5,10d;12d' file
   This will back the file up to file.bak, and delete the given lines.

*] To concatenate a bunch of files into one file and removing all the blank lines:
   sed -e '$s/$/\n/' -s chr13_frag*GC_Signal.txt > chr13_GC_Signal.txt; sed -i '/^$/d' chr13_GC_Signal.txt

*] To search and replace a string in multiple files
   sed -i.bak 's/FluoroscanningPlots/FscanPlots/g' *.R ## Replaced FluoroscanningPlots with FscanPlots in all
						       ## R scripts

#######################################################################################################

*] To grep multiple strings in a file:
   grep 'String1\|String2\|String3' filename

   To grep, case insensitive:
   grep -i 'String' filename

*] To check which users have access to a folder on AFS:
   fs listacl . or fs listacl /folderpath

*] To provide access to a particular folder on AFS:
   fs setacl -dir /afs/cs.wisc.edu/u/n/a/nandi/Stat/Stat_Quals/ -acl huling rl

*] To convert a jpg file to pdf:
   convert file.jpg file.pdf

*] To sort the folders/files in a directory by their sizes:
   du -hs * | sort -h

*] To sync local and remote folder contents:
   rsync -av nandi@desk00.stat.wisc.edu:Courses/BMI576_Fall2014/ BMI576_Fall2014  ## To sync contents from Stat folder to LMCG folder
   rsync -av BMI576_Fall2014/ nandi@desk00.stat.wisc.edu:Courses/BMI576_Fall2014  ## To sync contents from LMCG folder to Stat folder

*] To count the number of words in a pdf document:
   pdftotext document.pdf -enc UTF-8 - | wc -m

*] To check if a linux computer is 32 bit or 64 bit:
   a) file /sbin/init
   b) uname -a 
   To check the number of processors:
   a) cat /proc/cpu

*] To install a .deb package on ubuntu:
   sudo dpkg -i DEB_PACKAGE
   For example if the package file is called askubuntu_2.0.deb then you should do 
   sudo dpkg -i askubuntu_2.0.deb. 
   If dpkg reports an error due to dependency problems, you can run 
   sudo apt-get install -f 
   to download the missing dependencies and configure everything. 
   
   REMOVE A PACKAGE
   sudo dpkg -r PACKAGE_NAME

*] Synergy configuration file
   #####################################
   section: screens
   boltzmann:
   doty:
   end

   section: aliases
   doty:
   192.168.0.101
   end

   section: links
   boltzmann:
   left = doty
   doty:
   right = boltzmann
   end

   section: options
   screenSaverSync = false
   end
########################################

#######################################################################################################
*] To install R on ubuntu 14.04:
   Add and entry deb https://<my.favorite.cran.mirror>/bin/linux/ubuntu trusty/ in your /etc/apt/sources.list file
   (example http://cran.stat.ucla.edu/bin/linux/ubuntu trusty/)
   Then do sudo apt-get update
   Then do sudo apt-get install r-base 

   If you get a GPG error: http://cran.stat.ucla.edu trusty/ Release: The following signatures couldn't be verified because the public key is not available: NO_PUBKEY 51716619E084DAB9, then do the following:
   sudo apt-key adv --keyserver keyserver.ubuntu.com --recv-keys 51716619E084DAB9

*] To run R programs from command line:
   R CMD BATCH RScript.R > RScript.Rout # The .Rout is optional.

   To run R programs from command line, with arguments:
   R CMD BATCH '--args a=1 b=c(2,5,6)' RScript.R RScript.out &
   # For an example, see ~/Project_CurveReg/RScripts_CurveReg/RScript09-01_Mflorum_Registration.R
   Need to include the following code chunk:
   Args <- (commandArgs(TRUE))
   for(i in 1:length(Args)) eval(parse(text = Args[[i]]))

   To run it remotely from and continue running it even after logging out of server:
   nohup R CMD BATCH RScript.R &
   Then type "exit" to exit the terminal

*] Install R packages from .tar.gz file after adding NAMESPACE
   According to the R documentation for writing extensions, all packages destined for version 3.0.0 and 
   later must contain a NAMESPACE file. If you download an R package that gives you the above error, 
   here is what you should try: 

   1. Untar the package:
   tar -xvf the_package.tar.gz

   2. Add a NAMESPACE file with the line exportPattern( "." ):
   cd the_package
   echo 'exportPattern( "." )' > NAMESPACE
   cd ..
   
   3. Re-tar the package:
   tar -zcf the_package.tar.gz the_package
   
   4. Try and install it again.
   R CMD INSTALL the_package.tar.gz

   5. To check which version of Package loaded in R, do
   packageVersion("R-package")

*] To install R packages from github if devtools cannot be installed:
   1. git clone git://github.com/kbroman/broman
   2. R CMD build broman
   3. R CMD INSTALL broman_0.59-5.tar.gz

*] To install RCurl and XML packages in R, you should install the following on ubuntu:
   sudo apt-get install libcurl4-openssl-dev libxml2-dev

*] TO BUILD R PACKAGES ON RSTUDIO (ESSENTIAL STEPS)
   1. Filenames and function names should be the same
   2. Add the line #'@export before the function definition, to export that function
   3. Add a documentation file with detailed descriptions, and argument requirements
   4. In Build > Configure Build Tools, uncheck "Use devtools package functions if available" and check "Generate documentation with roxygen". In Configure, uncheck "Use roxygen to develop vignettes".
   4. Click "Build & Reload" in Build.
   5. To build .tar.gz click on "Build source package" in Build.
   6. To check package comprehensibly and build the manual, click on "Check package" in Build.
   7. If the package manual is not created automatically, do it from command prompt
      R CMD Rd2pdf packageName

#######################################################################################################
*] To print only unique rows from one file into another:
   sort -u file1 > file2

*] To see full paths of commands in top:
   top -c -u nandi

*] To list only empty subdirectories in a particular directory:
   find . -type d -empty

*] To dynamically watch a file/folder being populated by some script:
   watch ls -lht             # watch the folder
   tail -f filename          # dynamically watch the file being populated
   less +F filename          # dynamically watch the file being populated

*] To download multiple pdf files from a website:
   Ex. http://pages.stat.wisc.edu/~wahba/stat840/pdf1/
   wget -r -l1 -A.pdf "http://pages.stat.wisc.edu/~wahba/stat840/pdf1/"
   -r is for recursive download
   -l1 is for level 1. If there are subfolders with pdf files in it, this wont work

*] To get the number of cores: 
   cat /proc/cpuinfo
   
   To get memory size:
   cat /proc/meminfo

*] To delete a large number of files in a folder:
   find . -type f -delete

########################################
*] To ssh/rcp/rsync without password prompting:

   Lets say you want to copy between two hosts host_A and host_B. host_A is the host where you would run 
   the scp, ssh or rsyn command, irrespective of the direction of the file copy! On host_A, run this 
   command as the user that runs scp/ssh/rsync

   ssh-keygen -t rsa

   This will prompt for a passphrase. Just press the enter key. It will then generate an identification 
   (private key) and a public key. Do not ever share the private key with anyone! ssh-keygen shows 
   where it saved the public key. This is by default ~/.ssh/id_rsa.pub: Your public key has been saved 
   in <your_home_dir>/.ssh/id_rsa.pub
   
   Transfer the id_rsa.pub file to host_B by either ftp, scp, rsync or any other method. 
   On host_B, login as the remote user which you plan to use when you run scp, ssh or rsync on host_src. 
   Copy the contents of id_rsa.pub from host_A to ~/.ssh/authorized_keys on host_B 
   chmod 700 ~/.ssh/authorized_keys

   All set!

########################################
*] To open an application from command line and redirect the error messages to dev null:
   firefox 2>/dev/null &
